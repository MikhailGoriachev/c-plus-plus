#include "app.h"
#include "pch.h"
#include "Cylinder.h"
#include "task1.h"

using namespace std;

void task1()
{
	setColor(mainColor);

	cls();

	cout << "\n\n\t\t\t\tЗадание 1\n\n";

	cout << "\t\tСоздайте класс, описывающий цилиндр Cylinder(поля радиус\n"
		<< "\t\tи высота, тип полей – double). Реализуйте конструкторы \n"
		<< "\t\t(по умолчанию, и инициирующий – задающий радиус и высоту\n"
		<< "\t\tцилиндра), деструктор (выводящий сообщение «Cylinder: Объект\n"
		<< "\t\tуничтожен») геттеры и сеттеры (выбрасывать исключение при \n"
		<< "\t\tнулевом или отрицательном значении параметра), методы,\n"
		<< "\t\tвычисляющие и возвращающие площадь и объем цилиндра, метод\n"
		<< "\t\tвывода радиуса и высоты цилиндра в консоль, метод вывода \n"
		<< "\t\tданных цилиндра (радиус, высоту, площадь поверхности и объем) \n"
		<< "\t\tв виде строки таблицы.\n\n"
		<< "\t\tПерегрузите операции методами класса:\n"
		<< "\t\t\t•	+ сложение двух цилиндров, состоящую в сложении радиусов\n"
		<< "\t\t\t и высот двух цилиндров\n\n"
		<< "\t\t\t•	–вычитание вещественного числа из цилиндра: радиус и \n"
		<< "\t\t\tвысота уменьшаются на заданное значение\n\n"
		<< "\t\tПерегрузите операции функциями общего назначения\n"
		<< "\t\t\t•	+ сложение числа и цилиндра, состоящую в увеличении\n"
		<< "\t\t\tрадиуса и высоты на заданную величину\n\n"
		<< "\t\t\t•	/ деление на число, состоящую в делении радиуса \n"
		<< "\t\t\tи высоты на заданное число\n\n" << endl;
	
	getKey();

	cls();

	// количество цилиндров
	int size;

	setCursorVisible(true);

	// ввод количества создаваемых цилиндров
	cout << "\n\n\t\tВведите колчество цилиндров: ";

	cin >> size;

	if (size < 1)
	{
		// сообщение exception на тот случай, если будут введены неправильные данные
		throw exception("Количество цилиндров должно быть больше нуля!");
	}

	// отчистка экрана
	cls();

	// массив указателей на цилиндры
	Cylinder** cylinders = new Cylinder * [size];

	// заполнение цилиндров 
	for (Cylinder** cylinders_p = cylinders; cylinders_p < cylinders + size; cylinders_p++)
	{
		*cylinders_p = new Cylinder(getRand(1., 10.), getRand(1., 10.));
	}

	// выключение курсора
	setCursorVisible(false);

	char n;

	// цилиндр результирующий
	Cylinder* res = new Cylinder();

	// переменные для операций с цилиндрами
	int a, b;
	double num;

	while (true)
	{
		cls();

		// вывод таблицы
		showTableCylinder("\n\n\n\t\t\t\t\tТаблица\n", cylinders, size, maximumIndex(cylinders, size));

		cout << "\n\n\n\n\t\t1. Сложение двух цилиндров (методами класса)" << endl;
		cout << "\n\n\n\n\t\t2. Вычитание числа из цилиндра (методами класса)" << endl;
		cout << "\n\n\n\n\t\t3. Сложение числа и цилиндра (функции общего назначения)" << endl;
		cout << "\n\n\n\n\t\t4. Деление цилиндра на число (функции общего назначения)" << endl;
		cout << "\n\n\n\n\n\n\t\tESC ВЫХОД" << endl;

		
		cout << "\n\n\n\t\tВыберите пункт...";

		// проверка ввода 
		while (true)
		{
			n = getKey("");

			// если значение n входит в один из пунктов
			if (n < '5' && n > '0')
			{
				// включение курсора
				setCursorVisible(true);

				cls();

				// вывод таблицы
				showTableCylinder("\n\n\n\t\t\t\t\tТаблица\n", cylinders, size, maximumIndex(cylinders, size));

				switch (n)
				{

				// 1. Сложение двух цилиндров (методами класса)
				case '1':

					cout << "\n\n\t\t\t\t\t\tСложение цилиндров\n" << endl;

					cout << "\tВыберите первый цилиндр: ";
					cin >> a;

					cout << endl;

					cout << "\tВыберите второй цилиндр: ";
					cin >> b;

					// указатель возвращаемый цилиндр
					res = cylinders[a - 1][0] + cylinders[b - 1][0];

					cout << "\n\n\t\t\t\tРезультат сложения цилиндра " << a << " и цилиндра " << b << endl;

					break;

				// 2. Вычитание числа из цилиндра (методами класса)
				case '2':

					cout << "\n\n\t\t\t\t\t\tВычитание числа из цилиндра\n" << endl;

					cout << "\tВыберите цилиндр: ";
					cin >> a;

					cout << endl;

					cout << "\tВведите отнимаемое число: ";
					cin >> num;

					// указатель возвращаемый цилиндр
					res = cylinders[a - 1][0] - num;

					cout << "\n\n\t\t\t\tРезультат вычитания из цилиндра " << a << " числа " << num << endl;

					break;

				// 3. Сложение числа и цилиндра (функции общего назначения)
				case '3':

					cout << "\n\n\t\t\t\t\t\tСложение числа и цилиндра \n" << endl;

					cout << "\tВыберите цилиндр: ";
					cin >> a;

					cout << endl;

					cout << "\tВведите прибавляемое число: ";
					cin >> num;

					// указатель возвращаемый цилиндр
					res = cylinders[a - 1][0] + num;

					cout << "\n\n\t\t\t\tРезультат прибавление к цилиндру " << a << " числа " << num << endl;

					break;

				// 4. Деление цилиндра на число (функции общего назначения)
				case '4':

					cout << "\n\n\t\t\t\t\t\tДеление цилиндра на число \n" << endl;

					cout << "\tВыберите цилиндр: ";
					cin >> a;

					cout << endl;

					cout << "\tВведите число делитель: ";
					cin >> num;

					// указатель возвращаемый цилиндр
					res = cylinders[a - 1][0] / num;

					cout << "\n\n\t\t\t\tРезультат деления цилиндра " << a << " на число " << num << endl;

					break;

				default:
					break;
				}

				cout << endl;

				// вывод результрующего цилиндра
				/*cout << "\n\n"
					<< "    +—————+—————————————————+————————————————+—————————————————————————————————+\n"
					<< "    |  N  |    Радиус, R    |    Высота, H   |   Площадь, S   |    Объем, V    |\n"
					<< "    +—————+—————————————————+————————————————+—————————————————————————————————+\n";

				res->tableRow(1);*/

				showTableCylinder("", cylinders, 1, 0);

				cout << endl;

				// удаление цилиндра
				delete res;

				getKey();

				// выключение курсора
				setCursorVisible(false);

				break;
			}

			if (n == 27)
			{
				// удаление цилиндров
				for (size_t i = 0; i < size; i++)
				{
					
					delete cylinders[i];
				}

				delete[] cylinders;

				return;
			}
		}
	}

}