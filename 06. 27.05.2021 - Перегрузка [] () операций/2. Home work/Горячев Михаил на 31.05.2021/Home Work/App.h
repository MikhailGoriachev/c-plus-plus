#pragma once
#include "pch.h"
#include "Conoid.h"

/*
*	Задача 1. Создайте класс, описывающий усеченный конусConoid (радиус верхнего основания, радиус 
*	нижнего основания, высота – тип полей double). Реализуйтеконструкторы (только два: по умолчанию и 
*	инициирующий – т.е. задающий все поля класса), геттеры и сеттеры (при некорректных значениях 
*	выбрасывать в сеттерах исключение exception), методы для вычисления площади и объема усеченного конуса.
*	Перегрузите операции:
*	•	++ префиксный и постфиксный инкременты – увеличение на 1 высоты и радиусов оснований, перегрузка
*	методомкласса
*	•	-- префиксный и постфиксный декременты – уменьшение на 1 высоты и радиусов оснований, перегрузка
*	дружественной функцией класса, выбрасывать исключение при нулевом или отрицательном результате
*	•	<<операция вывода, выводить радиусы и высоту, площадь поверхности и объем в виде строки таблицы 
*	Создайте классArrayConoid, хранящий динамический массив из усеченных конусов – объектов класса Conoid
*	и размер этого массива. Массив создавать в конструкторах, требуется только два конструктора: по умолчанию,
*	создающий массив из 3 элементов, конструктор с параметром – количеством создаваемых элементов). Также 
*	разработайте деструктор для освобождения памяти, занятой массивом усеченных конусов.
*	Геттеры и сеттеры в классе ArrayConoid не разрабатывайте, реализуйте только константный метод size(), 
*	возвращающий размер массива.
*	В классе ArrayConoidперегрузите операции:
*	•	индексирования [], при выходе индекса за допустимые пределы выбрасывайте исключения
*	•	<<вывода массива в виде таблицы (элементы массива выводитьперегруженной операцией вывода)
*	Реализуйте методы класса ArrayConoid:
*	•	поиск индекса первого элемента массива с минимальным объемом
*	•	поиск индекса элемента массива с максимальной площадью. 
*	С использованием перегруженной операции класса ArrayConoid[]реализуйте функции (передавайте в функции 
*	объект класса ArrayConoid по ссылке):
*	•	вычисления суммарного объема конусов
*	•	вычисления суммарной площади поверхности конусов
*	•	вывод массива в консоль с выделением цветом конуса/конусов с максимальной площадью.
*	Создайте объект (экземпляр) класса ArrayConoid, продемонстрируйте разработанные методы.
*	
*/

// TODO: прикладная часть - полезная работа приложения - бизнес-логика приложения
class App
{
public:

#pragma region Задание 1

	// нахождение минимальной площади конуса
	// int maximumIndex(Conoid** conoid, size_t size);

	// сумма объёма
	double summV(Conoid* conoid, size_t size);

	// сумма площади
	double summS(Conoid* conoid, size_t size);

	// вывод массива цилиндров в табличном формате, горизонтальная линия: — Alt+0151
	//void showTableConoids(const char* title, Conoid** conoids, int n, int maxIndex);

	// Задание 1
	void task1();

#pragma endregion

#pragma region Задание 2

	// Задание 2
	void task2();

#pragma endregion
};

