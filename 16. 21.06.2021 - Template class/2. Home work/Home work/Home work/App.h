#pragma once
#include "pch.h"
#include "Utils.h"
#include "Deque.h"
#include "Parking.h"

template<typename T>
class Deque;

/*
	Задача 1. Разработайте шаблонные классы Deque и Queue(дек и очередь
		соответственно) на базе шаблонного класса List(односвязный список)
		.Разработайте консольное приложение, в котором продемонстрируйте
		операции с деком и очередью для типов int, char, Goods(класс для
		представления товаров, поля класса – код товара и наименование
		товара, цена за единицу товара, количество покупаемых единиц товара.
		В классе должны быть реализованы конструкторы и деструктор, методы
		доступа к полям для получения и изменения информации, а также методы
		вычисления суммы оплаты за товар – произведение цены за единицу
		товара и количества покупаемых единиц товара.Перегрузите операции
		присваивания, вывода).
	Задача 2. При помощи шаблонного класса Stack(с ограничением во
		внешнем классе емкости до 12 элементов) для представления полос
		парковки, решите задачу моделирования парковки автомобилей у
		магазина, в котором и приобретался товар.

		Автомобили могут ставиться на парковку только в начало парковочной полосы,
		автомобили могут забираться с парковкитолько с начала полосы.Но владельцы
		могут забирать автомобили в произвольном порядке.Для этого машины с начала
		парковочной полосы перемещаются на маневровую полосу, до машины, которую
		требуется забрать.Эта машина покидает парковочную полосу, затем машины с
		маневровой полосы возвращаются на парковочную.
		Разработайте класс Parking для решения задачи парковки.В классе Parking
		реализуйте методы добавления автомобиля на парковку, изъятия произвольного
		автомобиля с парковки.
*/


// TODO: прикладная часть - полезная работа приложения - бизнес-логика приложения
class App
{

	// объект Parking. Задание 2
	Parking park_;

public:

#pragma region Задания

#pragma region Задание 1. Демонстрация Deque и Queue

	// Задание 1. Демонстрация Deque и Queue
	void task1();

	// Демонстрация Deque и Queue (int)
	void task1DemoIntDeq();

	// Демонстрация Deque и Queue (int)
	void task1DemoIntQue();

	// Демонстрация Deque и Queue (char)
	void task1DemoCharDeq();

	// Демонстрация Deque и Queue (char)
	void task1DemoCharQue();

	// Демонстрация Deque и Queue (Goods)
	void task1DemoGoodsDeq();

	// Демонстрация Deque и Queue (Goods)
	void task1DemoGoodsQue();

#pragma endregion

#pragma region Задача 2. Парковка

	// Задача 2. Парковка
	void task2();

	// вывод парковки
	void showParking();


	// добавление автомобиля
	void addParking();


	// удаление последнего автомобиля
	void popParking();


	// удаление любого автомобиля по индексу
	void popAnyParking();

	// генерация автомобиля
	Car genCar();


#pragma endregion

#pragma endregion

};

